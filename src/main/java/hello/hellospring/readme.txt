컨트롤러: 웹 MVC의 컨트롤러 역할
서비스: 핵심 비즈니스 로직 구현
리포지토리: 데이터베이스에 접근, 도메인 객체를 DB에 저장하고 관리
도메인: 비즈니스 도메인 객체, 예) 회원, 주문, 쿠폰 등등 주로 데이터베이스에 저장하고 관리됨


-Optional 클래스
Optional<T> 클래스는 Integer나 Double 클래스처럼 'T'타입의 객체를 포장해 주는 래퍼 클래스(Wrapper class)입니다.
따라서 Optional 인스턴스는 모든 타입의 참조 변수를 저장할 수 있습니다.
ofNullable() 메소드는 명시된 값이 null이 아니면 명시된 값을 가지는 Optional 객체를 반환하며,
            명시된 값이 null이면 비어있는 Optional 객체를 반환합니다.

개발한 기능을 실행해서 테스트 할 때 자바의 main 메서드를 통해서 실행하거나, 웹 애플리케이션의
컨트롤러를 통해서 해당 기능을 실행한다. 이러한 방법은 준비하고 실행하는데 오래 걸리고, 반복 실행하기
어렵고 여러 테스트를 한번에 실행하기 어렵다는 단점이 있다. 자바는 JUnit이라는 프레임워크로 테스트를
실행해서 이러한 문제를 해결한다.

JUnit을 활용한 테스트에서는 assertThat 구문을 활용하여 코드의 길이를 줄이면서도
읽혀지는 코드를 작성할 수 있도록 도와줍니다.
즉 assertThat을 잘 사용하면 개발자의 의도를 보다 명확하게 드러낼 수 있는 큰 장점을 얻어갈 수 있을 것입니다.

@AfterEach 를 사용하면 각 테스트가
종료될 때 마다 이 기능을 실행한다. 여기서는 메모리 DB에 저장된 데이터를 삭제한다.

Private : class 외부에서 접근할수 없는 변수
Protected : 같은패키지, 자식클래스에서의 모든 class가 접근가능하다.
Public : 외부의 클래스에서도 접근가능하다. 다른 패키지에서도 접근가능.

 memberRepository.findByName(member.getName()) -> findByName은 Optional타입을 반환한다

Controller을 통해 데이터를 요청받고, 서비스에서 비지니스 로직을만들고, 레퍼지토리에 저장.


IOC가 적용된 경우, 객체의 생성을 특별한 관리 위임 주체에게 맡깁니다. 이 경우 사용자는 객체를 직접 생성하지 않고, 객체의 생명주기를 컨트롤하는 주체는 다른 주체가 됩니다. 즉, 사용자의 제어권을 다른 주체에게 넘기는 것을 IOC(제어의 역전) 라고 합니다.
Spring IoC컨테이너가 관리하는 자바 객체를 빈 이라고부름  Spring에 의하여 생성되고 관리되는 자바 객체를 Bean이라고 합니다.

dependency injection : 필드주입, setter주입, 생성자주입

먼저 컨테이너Ioc에서 @Controller에 있는 @GetMapping을찾음 -> 우선순위가 static 보다높다.

